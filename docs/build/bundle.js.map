{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/db.js","../../src/utils.js","../../src/DisplayCard.svelte","../../src/RatingComponent.svelte","../../src/elo.js","../../src/DisplayStats.svelte","../../src/Welcome.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.20.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","const dogs = [\n    {\n        url: \"https://i.ytimg.com/vi/PZpsigEdjOw/hqdefault.jpg\",\n        id: 1,\n        score: 0\n    },\n    {\n        url: \"https://i.ytimg.com/vi/3dcli9i_pvA/hqdefault.jpg\",\n        id: 2,\n        score: 0\n    },\n    {\n        url: \"https://i.ytimg.com/vi/Ra-Cq19vBXA/hqdefault.jpg\",\n        id: 3,\n        score: 0\n    },\n    {\n        url: \"https://i.ytimg.com/vi/2Twtsm6roa8/hqdefault.jpg\",\n        id: 4,\n        score: 0\n    },\n    {\n        url: \"https://www.surfcoast.vic.gov.au/files/assets/public/corporate-images/landing-page-images/doglookingup-800x531.jpg\",\n        id: 5,\n        score: 0\n    },\n    {\n        url: \"https://i.ytimg.com/vi/RVp3I7Eyjqg/hqdefault.jpg\",\n        id: 6,\n        score: 0\n    },\n    {\n        url: \"https://www.telegraph.co.uk/content/dam/Pets/spark/pets-at-home-2017/happy-dog-runs.jpg\",\n        id: 7,\n        score: 0\n    },\n    {\n        url: \"https://s1.reutersmedia.net/resources/r/?m=02&d=20120209&t=2&i=568805608&w=1200&r=BTRE8181K3900\",\n        id: 8,\n        score: 0\n    },\n    {\n        url: \"https://1.bp.blogspot.com/-uNSrS1kFtLk/TnA7ZCRO9AI/AAAAAAAAAJA/BSztWOrHSIA/s1600/Bulldog%2B-%2Bcompact%2Bdog%2B01.jpg\",\n        id: 9,\n        score: 0\n    }\n]\n\nexport {dogs};","function randomIntFromInterval(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n\n  export {randomIntFromInterval}","<script>\n  import { createEventDispatcher } from \"svelte\";\n  export let url;\n  export let id;\n  export let score;\n  export let showScore = false;\n\n  const dispatch = createEventDispatcher();\n  let src = url;\n\n  function cardChosen() {\n    dispatch(\"cardPressed\", id);\n  }\n</script>\n\n<style>\n  .box {\n    max-width: 900px;\n  }\n</style>\n\n<div on:click={cardChosen} class=\"box has-text-centered\">\n  <!-- <p>ID: {id}</p> -->\n  <figure class=\"image\">\n    <img src={url} alt=\"picture of a dog\" />\n  </figure>\n  {#if showScore}\n    <p>Score: {score}</p>\n  {/if}\n</div>\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n  import { randomIntFromInterval } from \"./utils.js\";\n  import { newRatings } from \"./elo.js\";\n  import DisplayCard from \"./DisplayCard.svelte\";\n  import SectionContainer from \"./partial/SectionContainer.svelte\";\n  const dispatch = createEventDispatcher();\n  export let competitors;\n\n  let dogI = {};\n  let dogII = {};\n  let userHasChoosenAtleastOnce = false;\n  let userInactiveTimer;\n\n  function setRandomDogs() {\n    const min = 0;\n    const max = competitors.length - 1;\n    dogI = competitors[randomIntFromInterval(min, max)];\n    dogII = competitors[randomIntFromInterval(min, max)];\n    if (dogI.id === dogII.id) {\n      // console.log(\"Same was choosen\");\n      setRandomDogs();\n    }\n  }\n\n  function setNewScores(event, competitors, playerOne, playerTwo) {\n    const idChosenDog = event.detail;\n    const winner = idChosenDog === playerOne.id ? 1 : 0;\n\n    // calcs for points\n    const newScore = newRatings(playerOne.score, playerTwo.score, winner);\n\n    // Update competitors\n    playerOne.score = newScore.player1;\n    playerTwo.score = newScore.player2;\n\n    // Could store dogs in a map instead of array to avoid looping through array. Problem with scaleability.\n    competitors.forEach(dog => {\n      if (dog.id === playerOne.id) {\n        dog.score = playerOne.score;\n      } else if (dog.id === playerTwo.id) {\n        dog.score = playerTwo.score;\n      }\n    });\n\n    // competitors = [...competitors];\n\n    // write new data to app state\n    dispatch(\"stateUpdate\", competitors);\n    // change pair of dogs\n    setRandomDogs();\n  }\n\n  function cardChosen(event) {\n    removeInfoText();\n    setNewScores(event, competitors, dogI, dogII);\n  }\n\n  function removeInfoText() {\n    userHasChoosenAtleastOnce = true;\n    clearTimeout(userInactiveTimer);\n    // Timer \"leak\" if change to other tab. However no error message shown.\n    userInactiveTimer = setTimeout(() => {\n      userHasChoosenAtleastOnce = false;\n    }, 4000);\n  }\n\n  setRandomDogs();\n</script>\n\n<SectionContainer>\n\n  {#if !userHasChoosenAtleastOnce}\n    <div class=\"column has-text-centered has-text-info\">\n      <div class=\"notification is-success\">\n        <h4 class=\"title is-4\">Click the dog that you think is cuter.</h4>\n      </div>\n    </div>\n  {/if}\n  <div class=\"columns\">\n    <div class=\"column\">\n      <DisplayCard on:cardPressed={cardChosen} {...dogI} />\n    </div>\n    <div class=\"column\">\n      <DisplayCard on:cardPressed={cardChosen} {...dogII} />\n    </div>\n  </div>\n\n</SectionContainer>\n","// let RatedPlayer = function(id,rating){\n// \tthis.rating = rating;\n// \tthis.id = id;\n// };\n\n// RatedPlayer.prototype.updateRating = function(newRating){\n// \tthis.rating = newRating;\n// };\n\n// let Match = function(player1,player2,result){\n// \tratingsAfterMatch = newRatings(player1.rating,player2.rating,1);\n// \tplayer1.updateRating(ratingsAfterMatch.player1);\n// \tplayer2.updateRating(ratingsAfterMatch.player2);\n// };\n\n// newRatings [function]\n// Description: Returns an array with keys \"Player1\" and \"Player2\" holding corresponding new ELO ratings.\n// Parmeters:\n// player1_rating: Rating of Player1 right before match.\n// player2_rating: Rating of Player2 right before match.\n// k_value: The constant K-value used in developers ELO system. Read the wikipedia article on ELO for details.\n// result: The result of the match on a scale of 0 to 1. \"0\" = Player1 lost, Player 2 won. \"0.5\" = Draw. \"1\" = Player 1 won, Player 2 lost.\n// should_round: Set to \"true\" by default. Rounds the output ratings.\n\nfunction newRatings(player1Rating,player2Rating,result,kValue,shouldRound) {\n\t// DO THE FOLLOWING STATEMENTS NEED A 'var' before kValue and shouldRound?\n\tif (!kValue) kValue = 32;\n\tif (!shouldRound) shouldRound = true;\n\t\n\t// Assign actual results to players.\n\tvar player1Result = result;\n\tvar player2Result = 1 - result;\n\n\t// Calculate expectated results given ratings before game.\n\tvar player1Expectation = 1 / (1+Math.pow(10,((player2Rating - player1Rating)/400)));\n\tvar player2Expectation = 1 / (1+Math.pow(10,((player1Rating - player2Rating)/400)));\n\n\t// Calculate new rating\n\tvar player1NewRating = player1Rating + (kValue*(player1Result - player1Expectation));\n\tvar player2NewRating = player2Rating + (kValue*(player2Result - player2Expectation));\n\n\t// Handle Optional Rounding\n\tif (shouldRound) {\n\t\tplayer1NewRating = Math.round(player1NewRating);\n\t\tplayer2NewRating = Math.round(player2NewRating);\t\n\t}\n\n\t// Create and return new scores object\n\tvar newScores = {'player1':player1NewRating,'player2':player2NewRating}; \n\treturn newScores\n};\n\nexport {newRatings}","<script>\n  import DisplayCard from \"./DisplayCard.svelte\";\n  import SectionContainer from \"./partial/SectionContainer.svelte\";\n  export let competitors = [];\n\n  function sortList(list) {\n    const sortedList = list.sort((a, b) => {\n      if (a.score > b.score) {\n        return -1;\n      }\n      if (a.score < b.score) {\n        return 1;\n      }\n      if (a.score === b.score) {\n        return 0;\n      }\n    });\n    //console.log(\"sortedList\", sortedList);\n\n    return sortedList;\n  }\n</script>\n\n<SectionContainer>\n\n  {#each sortList(competitors) as competitor}\n    <div class=\"columns\">\n      <div class=\"column is-hidden-mobile\" />\n      <!-- <div class=\"column is-four-fifths\"> -->\n      <div class=\"column\">\n        <DisplayCard {...competitor} showScore={true} />\n      </div>\n      <div class=\"column is-hidden-mobile\" />\n    </div>\n  {/each}\n\n</SectionContainer>\n","<script>\n  export let navigate = () => {};\n</script>\n\n<section class=\"hero is-medium is-primary is-bold is-fullheight\">\n  <div class=\"hero-body\">\n    <div class=\"container\">\n      <h1 class=\"title\">Welcome to Dog rate</h1>\n      <h2 class=\"subtitle\">\n        A webb app implementing the ELO rating algorithm, built with SvelteJS\n        and Bulma!\n      </h2>\n      <button\n        on:click={() => {\n          navigate('rate');\n        }}\n        class=\"button is-primary is-inverted is-outlined is-large\">\n        Start rating\n      </button>\n    </div>\n  </div>\n</section>\n","<script>\n  import \"../node_modules/bulma/css/bulma.min.css\";\n  import { dogs } from \"./db.js\";\n  import RatingComponent from \"./RatingComponent.svelte\";\n  import DisplayStats from \"./DisplayStats.svelte\";\n  import Welcome from \"./Welcome.svelte\";\n  let currentRoute = \"about\";\n  let competitors = dogs;\n  function updateState(event) {\n    // console.log(event.detail);\n    competitors = event.detail;\n  }\n  function navigate(route) {\n    // console.log(route);\n    currentRoute = route;\n  }\n</script>\n\n<!-- Navbar -->\n<div class=\"tabs is-centered {currentRoute === 'about' ? 'is-hidden' : ''}\">\n  <ul>\n    <li\n      class={currentRoute === 'about' ? 'is-active' : ''}\n      on:click={() => {\n        navigate('about');\n      }}>\n      <a>About</a>\n    </li>\n    <li\n      class={currentRoute === 'rate' ? 'is-active' : ''}\n      on:click={() => {\n        navigate('rate');\n      }}>\n      <a>Rate</a>\n    </li>\n    <li\n      class={currentRoute === 'scoreboard' ? 'is-active' : ''}\n      on:click={() => {\n        navigate('scoreboard');\n      }}>\n      <a>Scoreboard</a>\n    </li>\n  </ul>\n</div>\n<!-- Main -->\n\n<!-- Main/ home -->\n{#if currentRoute === 'about'}\n  <Welcome {navigate} />\n  <!-- Main/ rate -->\n{:else if currentRoute === 'rate'}\n  <RatingComponent on:stateUpdate={updateState} {competitors} />\n\n  <!-- Main/ stats -->\n{:else if currentRoute === 'scoreboard'}\n  <DisplayStats {competitors} />\n{/if}\n\n<!-- Potential footer -->\n<!-- <button class=\"button is-info\" on:click={() => console.log(competitors)}>\n  Log competitors\n</button> -->\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","get_slot_context","definition","ctx","$$scope","slice","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","current_component","set_current_component","component","createEventDispatcher","Error","get_current_component","type","detail","callbacks","$$","e","createEvent","initCustomEvent","custom_event","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","get_spread_update","levels","updates","to_null_out","accounted_for","n","key","undefined","get_spread_object","spread_props","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","dogs","url","id","score","randomIntFromInterval","min","max","Math","floor","random","showScore","dispatch","slot_ctx","lets","merged","len","userInactiveTimer","competitors","dogI","dogII","userHasChoosenAtleastOnce","setRandomDogs","setNewScores","playerOne","playerTwo","winner","newScore","player1Rating","player2Rating","result","kValue","shouldRound","player2Result","player1NewRating","pow","player2NewRating","round","player1","player2","newRatings","dog","clearTimeout","setTimeout","sortList","iterations","list","sort","navigate","currentRoute","route","body"],"mappings":"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"}